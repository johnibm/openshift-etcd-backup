#Create Namespace
#Create Service Account
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: openshift-backup
  namespace: ocp-etcd-backup
  labels:
    app: openshift-backup

#Create Cluster Role
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cluster-etcd-backup
rules:
- apiGroups: [""]
  resources:
     - "nodes"
  verbs: ["get", "list"]
- apiGroups: [""]
  resources:
     - "pods"
     - "pods/log"
  verbs: ["get", "list", "create", "delete", "watch"]

#Create Cluster Role Binding
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: openshift-backup
  labels:
    app: openshift-backup
subjects:
  - kind: ServiceAccount
    name: openshift-backup
    namespace: ocp-etcd-backup
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-etcd-backup
#Set privileges for servcie account
#oc adm policy add-scc-to-user privileged -z openshift-backup

#Create CronJob
---
kind: CronJob
apiVersion: batch/v1
metadata:
  name: openshift-backup
  namespace: ocp-etcd-backup
  labels:
    app: openshift-backup
spec:
  schedule: "56 23 * * *"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 5
  failedJobsHistoryLimit: 5
  jobTemplate:
    metadata:
      labels:
        app: openshift-backup
    spec:
      backoffLimit: 0
      template:
        metadata:
          labels:
            app: openshift-backup
        spec:
          containers:
            - name: backup
              image: "registry.redhat.io/openshift4/ose-cli"
              command:
                - "/bin/bash"
                - "-c"
                - oc get no -l node-role.kubernetes.io/master --no-headers -o name | xargs -I {} --  oc debug {} -- bash -c 'chroot /host sudo -E /usr/local/bin/cluster-backup.sh /home/core/backup/ && chroot /host sudo -E find /home/core/backup/ -type f -mmin +"1" -delete'
          restartPolicy: "Never"
          terminationGracePeriodSeconds: 30
          activeDeadlineSeconds: 500
          dnsPolicy: "ClusterFirst"
          serviceAccountName: "openshift-backup"
          serviceAccount: "openshift-backup"
---

#Create Deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: etcd-backup-deployment
  labels:
    app: etcd-backup
spec:
  replicas: 1
  selector:
    matchLabels:
      app: etcd-backup
  template:
    metadata:
      labels:
        app: etcd-backup
    spec: 
      initContainers:
      - name: init
        image: alpine
        imagePullPolicy: Always
        command: ['sh', '-c', 'mkdir -p -m 777 /openshift_etcd_backup/data']
        
        volumeMounts:                     
          - name: etcd-backup-vol
            mountPath: /openshift_etcd_backup
      containers:
      - name: etcd-backup
        image: alpine
        imagePullPolicy: Always
        command: ['sh', '-c', 'while true; do sleep 30; done;']
        volumeMounts:                     
          - name: etcd-backup-vol
            mountPath: /openshift_etcd_backup
      volumes:
        - name: etcd-backup-vol
          persistentVolumeClaim:
            claimName: etcd-backup-pvc                
      resources:
      requests:
        memory: "64Mi"
        cpu: "250m"
      limits:
        memory: "128Mi"
        cpu: "500m"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: etcd-backup-pvc
  labels:
    appname: etcd-backup
spec:
  accessModes: [ "ReadWriteMany" ]
  storageClassName: "ocs-storagecluster-cephfs"
  resources:
    requests:
      storage: 100Gi

